{"version":3,"sources":["components/Header.js","components/Info.js","components/FormSaved.js","components/Form.js","components/Footer.js","components/Home.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","state","isNavOpen","navBarHandler","bind","this","setState","Fragment","Navbar","dark","expand","className","NavbarToggler","onClick","NavbarBrand","Collapse","navbar","isOpen","Nav","NavItem","NavLink","to","Jumbotron","React","Component","Info","Card","CardHeader","CardBody","CardText","FormSaved","props","console","log","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Form","handleSubmit","values","alert","JSON","stringify","onSubmit","Row","Label","htmlFor","md","Col","text","model","id","name","placeholder","validators","show","messages","size","offset","select","textarea","rows","Button","type","color","Footer","href","style","background","Home","Main","path","component","exact","withRouter","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.deab0ab0.chunk.js","sourcesContent":["import React from 'react'\nimport {Nav,Navbar,NavbarBrand,NavItem,NavLink,NavbarToggler,Collapse,Jumbotron} from 'reactstrap'\n\nclass Header extends React.Component{\n    constructor(){\n        super()\n        this.state={\n            isNavOpen:false\n        }\n        this.navBarHandler=this.navBarHandler.bind(this);\n    }\n\n    navBarHandler()\n            {\n                this.setState({\n                isNavOpen:!this.state.isNavOpen\n                             })\n            }\n\n    render(){\n        return(\n            <React.Fragment>\n                <Navbar dark expand=\"md\" >\n                <div className=\"container\">\n                    <NavbarToggler onClick={this.navBarHandler} />\n                    <NavbarBrand className=\"\">Form</NavbarBrand>\n                    <Collapse navbar isOpen={this.state.isNavOpen}>\n                        <Nav navbar>\n                            <NavItem>\n                            <NavLink className=\"nav-link\" to=\"/info\"><span className=\"fa fa-info\">\n                            </span> Info</NavLink>\n                            </NavItem>\n                            <NavItem>\n                            <NavLink className=\"nav-link\" to=\"/form\"><span className=\"fa fa-table\">\n                            </span> Form</NavLink>\n                            </NavItem>\n                            <NavItem>\n                            <NavLink className=\"nav-link\" to=\"/footer\"><span className=\"fa fa-angle-double-down\">\n                            </span> Footer</NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                            <h1>Form using React by Raza</h1>\n                            <p>A form purely based on React, React-redux and React Router </p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Header;","import React from 'react'\nimport {Card,CardBody,CardHeader,CardText, CardTitle} from 'reactstrap'\n\nfunction Info(){\n    return(\n        <Card className=\"reactCard\">\n            <CardHeader>\n                <h3>A bit of information about me</h3>\n            </CardHeader>\n            <CardBody>\n                <CardText>\n                    <p className=\"info\">\n                I have been working on Web Development with a focus on Front-end Web development through HTML, \n                CSS, JavaScript, Bootstrap, React, and Node.js. \n                I am a well-experienced programmer in programming languages like Java, Python, R and their practical implementation in Machine Learning and Data Visualization. \n                Likes to lead the team from the front. I am currently open to developing websites for NGOs. \n                One thing which is inevitable is my SMILE <span className=\"fa fa-smile\"></span>.\n                </p> \n                </CardText>\n            </CardBody>\n        </Card>\n    )\n}\nexport default Info;","import React from 'react'\n\nfunction FormSaved(props){\n    \nconsole.log(props)\n    return(\n        <div>\n            <h1>\n                {props}\n            </h1>\n        </div>\n    )\n    \n}\nexport default FormSaved;","import React from 'react'\nimport {Label,Col,Row,Button} from 'reactstrap'\nimport {Link} from 'react-router-dom'\nimport {LocalForm,Control,Errors} from 'react-redux-form'\nimport FormSaved from './FormSaved'\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\nclass Form extends React.Component{\n\n    constructor(){\n        super()\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n    handleSubmit(values) {\n        alert('Current State is: ' + JSON.stringify(values));\n    }\n   \n    render(){\n        \n        return(\n            <React.Fragment>\n            <div className=\"form-react\">\n                <div className=\"container\">\n            <div className=\"row row-content \">\n                    <div className=\"col-12\">\n                        <h3>Want to get in Touch??</h3>\n                        <h4>Please fill the form</h4>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <LocalForm onSubmit={(values)=>{this.handleSubmit(values)}}>\n                        <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>\n                                First Name\n                                </Label>\n                                <Col md={6}>\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>\n                                Last Name\n                                </Label>\n                                <Col md={6}>\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                 <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>\n                                Contact Tel.\n                                </Label>\n                                <Col md={6}>\n                                <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                         />\n                                <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={6}>\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\" \n                                        validators={{\n                                            required, validEmail\n                                        }}/>\n                                 <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                     />\n                                </Col>\n\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                <Label htmlFor=\"selectMenu\">Are you on Whatsapp with same number?</Label>\n                                <Control.select model=\".contactType\" name=\"contactType\" id=\"selectMenu\"\n                                        className=\"form-control\">\n                                        <option>Yes</option>\n                                        <option>No</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Message</Label>\n                                <Col md={10}>\n                                <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        \n                                        Send Message\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                        </div>\n                       </div>\n                    </div>\n               </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Form;","import React from 'react';\nimport {Link} from 'react-router-dom'\n\nfunction Footer(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to=\"/home\">Home</Link></li>\n                        <li><Link to=\"/info\">Info</Link></li>\n                        <li><Link to=\"/form\">Form</Link></li>\n                    </ul>\n                </div>\n               \n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"https://www.facebook.com/amir.raza.399826/\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"https://www.linkedin.com/in/amirrazacs/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <span style={{background:\"white\",color:\"white\"}} > <a className=\"btn btn-social-icon btn-git\" href=\"https://github.com/raza8899\"><i className=\"fa fa-github\"></i></a>\n                        </span>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:amirraza2221@gmail.com\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Amir Raza</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;","import React from 'react'\nimport Header from './Header';\nimport Info from './Info'\nimport Form from './Form'\nimport Footer from './Footer'\n\nfunction Home(){\n\n    return(\n        <React.Fragment>\n        <Header />\n        <Info />\n        <Form />\n        <Footer />\n        </React.Fragment>\n    )\n}\nexport default Home;","import React from 'react'\nimport Header from './Header';\nimport Info from './Info'\nimport Form from './Form'\nimport {Switch,Route,Redirect,withRouter} from 'react-router-dom'\nimport Home from './Home'\nimport FormSaved from './FormSaved';\nimport Footer from './Footer';\nclass Main extends React.Component {\n\n    render(){\n        return(\n            <React.Fragment>\n                \n                <Switch>\n            <Route path=\"/home\" component={Home} />\n            <Route exact path='/info' component={Info} />\n            <Route exact path=\"/form\" component={Form} />\n            <Route exact path=\"/formSaved\" component={FormSaved} />\n            <Route exact path=\"/footer\" component={Footer} />\n\n\n            <Redirect to=\"/home\" />\n\n        </Switch>\n            </React.Fragment>\n        )\n    }\n   \n}\n\nexport default withRouter(Main);","import React from 'react';\nimport './App.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport Main from './components/Main'\nclass App extends React.Component{\n  \n  render(){\n    return(\n      <BrowserRouter>\n      <div className=\"App\">\n        <Main />\n      </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}